name: Secure CI/CD Pipeline 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest  

    strategy:
      matrix:
        node-version: [16, 18]  

    env:
    
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      API_KEY: ${{ secrets.API_KEY }}

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'  
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies (common)
        run: npm ci  

      - name: Install project-specific dependencies (optional)
        working-directory: ./  
        run: npm install  

      - name: Lint code (optional)
        run: npm run lint  

      - name: Build and test Backend (if present)
        run: |
          if [ -d "Backend" ]; then
            cd Backend && npm install && npm run build && npm test
            # Add error handling or logging (optional)
          fi

      - name: Build and test Frontend (if present)
        run: |
          if [ -d "Frontend" ]; then
            cd Frontend && npm install && npm run build && npm test
            # Add error handling or logging (optional)
          fi

      - name: Upload coverage reports (optional)
        uses: actions/upload-artifact@v3
        with:
          name: coverage_${{ matrix.node-version }}
          path: coverage/  
        if: success() && steps.build-and-test.outputs.coverage 

      - name: Deploy to staging (optional) 
        uses: actions/checkout@v3  
        if: github.event.name == 'push' && github.base_ref == 'main'  
        

